// HTML로는 웹의 내용을 작성하고, CSS로는 웹을 디자인하며, 자바스크립트로는 웹의 동작을 구현할 수 있습니다.
// 인터넷 연습장 : about:blank
// 메소드 = 기능이라고 우선 이해하기
// 다이얼로그 = 팝업창




// 변수 만드는 3가지 방법
// 변수 만드는 방법
// var a;
// let b;
// 상수 변수 만드는 방법
// const c = 3;

// var, let은 계속 수정이 가능하다.
// a = 3;
// a = 10;

// b = 4;
// b = 11;

// const a = 1;
// console.log(typeof a)

// 인터넷 연습장 about:blank


// 원시타입 : 값 자체(가리키고 있는 값을 따라가서 실제 메모리에 저장된 주소)가 복사되어 저장됩니다.
// let str1 = 'hello';
// let str2 = str1;
// console.log(str2); // 'hello'
// str1 = 'world';
// console.log(str2); // str2에 할당된 값은 여전히 'hello' 입니다.

// 한번 만들어진 문자열은 절대 변하지 않습니다. 이러한 성질을 불변(immutable) 이라고 합니다. 아래 예시에서도 알 수 있듯 어떠한 문자열 메소드도 문자열 자체를 변경하지 않습니다. 새로운 문자열을 반환할 뿐입니다.
// let 불멸자 = "immortal";
// 불멸자[0] = 'l';
// console.log(불멸자);
// // immortal

// 1. indexOf()
// 문자열 안에 존재하는 특정한 문자를 검색하여 문자의 인덱스를 반환합니다. 검색할 문자와 검색을 시작할 인덱스 번호 두 가지를 인자로 전달 할 수 있습니다. 문자열 안에 검색하고자하는 문자가 존재하지 않으면 -1을 반환합니다.

// let text = "Next level 제껴라 제껴라 제껴라";

// console.log(text.indexOf('level'));
// // 5
// console.log(text.indexOf('제껴라'));
// // 11
// console.log(text.indexOf('제껴라', 16));
// // 19
// console.log(text.indexOf('광야'));
// // -1


// 2. lastIndexOf()
// 특정한 문자를 검색하는 순서가 indexOf()와 정반대입니다.  검색의 순서가 바뀐다고 해서 인덱스 번호도 바뀌는것은 아님에 유의해야합니다.

// let text = "Next level 제껴라 제껴라 제껴라";

// console.log(text.lastIndexOf('level'));
// // 5
// console.log(text.lastIndexOf('제껴라'));
// // 19
// console.log(text.lastIndexOf('제껴라', 16));
// // 15
// console.log(text.lastIndexOf('광야'));
// // -1

// 1. match()    
// match 메소드는 정규표현식을 인자로 받아 일치하는 문자열을 찾아 배열의 형태로 반환합니다. g플래그(일치하는 하나 이상의 모든 부분)의 유무에 따라 
// 일치하는 값 하나만 찾을지, 일치하는 모든 값을 찾을지 결정됩니다.

// console.log("Naevis 우리 ae, ae들을 불러봐".match(/ae/));
// // g 플래그가 없는 경우 : ["ae"]
// console.log("Naevis 우리 ae, ae들을 불러봐".match(/ae/g));
// // g 플래그가 있는 경우 : ["ae", "ae", "ae"]
// console.log("Naevis 우리 ae, ae들을 불러봐".match(/[a-zA-Z]\w+/g));
// // w+ => 하나 이상의 문자로 이루어진 단어를 찾습니다 : ["Naevis", "ae", "ae"]

